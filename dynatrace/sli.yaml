---
    spec_version: '1.0'
    indicators:
      throughput_svc:           "builtin:service.requestCount.total:merge(0):sum?entitySelector=tag($SERVICE),type(SERVICE)"
      error_rate_svc:           "builtin:service.errors.total.count:merge(0):avg?entitySelector=tag($SERVICE),type(SERVICE)"
      rt_svc_p50:               "builtin:service.response.time:merge(0):percentile(50)?entitySelector=tag($SERVICE),type(SERVICE)"
      rt_svc_p90:               "builtin:service.response.time:merge(0):percentile(90)?entitySelector=tag($SERVICE),type(SERVICE)"
      rt_svc_p95:               "builtin:service.response.time:merge(0):percentile(95)?entitySelector=tag($SERVICE),type(SERVICE)"
      rt_test_invoke:           "calc:service.teststepresponsetime:filter(eq(Test Step,invoke)):merge(0):avg?entitySelector=tag($SERVICE),type(SERVICE)"
      rt_test_echo:             "calc:service.teststepresponsetime:filter(eq(Test Step,echo)):merge(0):avg?entitySelector=tag($SERVICE),type(SERVICE)"
      rt_test_version:          "calc:service.teststepresponsetime:filter(eq(Test Step,version)):merge(0):avg?entitySelector=tag($SERVICE),type(SERVICE)"
      rt_test_homepage:         "calc:service.teststepresponsetime:filter(eq(Test Step,homepage)):merge(0):avg?entitySelector=tag($SERVICE),type(SERVICE)"
      svcalls_test_invoke:      "calc:service.teststepservicecalls:filter(eq(Test Step,invoke)):merge(0):sum?entitySelector=tag($SERVICE),type(SERVICE)"
      svcalls_test_echo:        "calc:service.teststepservicecalls:filter(eq(Test Step,echo)):merge(0):sum?entitySelector=tag($SERVICE),type(SERVICE)"
      svcalls_test_version:     "calc:service.teststepservicecalls:filter(eq(Test Step,version)):merge(0):sum?entitySelector=tag($SERVICE),type(SERVICE)"
      svcalls_test_homepage:    "calc:service.teststepservicecalls:filter(eq(Test Step,homepage)):merge(0):sum?entitySelector=tag($SERVICE),type(SERVICE)"
